<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>玩客云直刷casaos</title>
      <link href="/posts/b297.html"/>
      <url>/posts/b297.html</url>
      
        <content type="html"><![CDATA[<h1 id="玩客云直刷casaos"><a href="#玩客云直刷casaos" class="headerlink" title="玩客云直刷casaos"></a>玩客云直刷casaos</h1><hr><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>原本想将自己6块钱薅的骁龙410的wifi棒子扩容，结果刷到了玩客云这个矿渣，20多块钱，1G+8G,千兆网口，虽然处理器稍微老了一点，但还是比骁龙410好了一点点，这不折腾折腾。正好有大佬把casaos集成到固件中，版本v0.4.4.2，足够新，也免得折腾了，这里记录一下整个过程。</p><h2 id="二、刷机工具下载"><a href="#二、刷机工具下载" class="headerlink" title="二、刷机工具下载"></a>二、刷机工具下载</h2><p>这里我将刷机工具放到了百度网盘<br>自取链接：<a href="https://pan.baidu.com/s/1XbNUykswBMw47TxqA9vLJw?pwd=qorw">链接：https://pan.baidu.com/s/1XbNUykswBMw47TxqA9vLJw?pwd=qorw<br>提取码：qorw</a><br>主要有三个文件,分别为固件包、烧录工具补丁、烧录工具</p><p><img src="/images/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7%E6%9C%BA.assets/image-20231007001920183.png" alt="image-20231007001920183"></p><h2 id="三、刷机步骤"><a href="#三、刷机步骤" class="headerlink" title="三、刷机步骤"></a>三、刷机步骤</h2><p>1.安装文件中的Amlogic USB Burning Tool.exe<br>2.解压文件中的晶晨烧录工具补丁，将其放入上一步安装的软件目录中，双击运行</p><p><img src="/images/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7%E6%9C%BA.assets/image-20231006232829646.png" alt="image-20231006232829646"></p><p>将超时时间改为999，点击打补丁即可</p><p><img src="/images/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7%E6%9C%BA.assets/image-20231006232910677.png" alt="image-20231006232910677"></p><p>3.玩客云拆机，连接烧录线【这里推荐烧录线连接台式电脑后面主板上的USB接口，不要连延长线之类的，同时注意烧录线要连接到玩客云上靠近HDMI口的那个USB口】，打开烧录工具，短接上电</p><p>如何拆机短接上电可以参考下面这个链接，注意<strong>先短接再上电</strong>。</p><p><a href="https://zhuanlan.zhihu.com/p/451706565">玩客云刷电视盒子+游戏机 - 知乎 (zhihu.com)</a></p><p>4.烧录工具中，文件选择网盘提供的集成casaos的固件包，注意选择擦除所有，然后点击开始</p><p>大概5-10分钟左右会烧录完毕。</p><p><img src="/images/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7%E6%9C%BA.assets/image-20231006233849505.png" alt="image-20231006233849505"></p><p>5.烧录完毕，点停止，关闭软件，拔掉玩客云电源，插入网线，然后重新插入玩客云电源，等待几分钟，去路由器（或光猫）后台去看玩客云的IP地址，然后打开ssh客户端软件，连接上玩客云。默认账号为root，密码为1234。</p><h2 id="四、固定ip地址"><a href="#四、固定ip地址" class="headerlink" title="四、固定ip地址"></a>四、固定ip地址</h2><p>可以参考下面这个教程<br>【玩客云刷Armbian，静态ip设置，安装CasaOS、docker实现更多可玩性（1）】 <a href="https://www.bilibili.com/video/BV1ez4y1M7R6/?share_source=copy_web&vd_source=7b8f5e66306e728c410ab758d8a2542c">https://www.bilibili.com/video/BV1ez4y1M7R6/?share_source=copy_web&amp;vd_source=7b8f5e66306e728c410ab758d8a2542c</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看当前ip信息，复制eth0的mac地址  de:40:63:6f:1f:27</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ifconfig</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改静态ip</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nano /etc/network/interfaces</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下面的hwaddres改成刚刚复制的mac</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Wired adapter <span class="comment">#1</span></span></span><br><span class="line">allow-hotplug eth0</span><br><span class="line">no-auto-down eth0</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">iface eth0 inet dhcp</span></span><br><span class="line">iface eth0 inet static</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hwaddress ether <span class="comment"># if you want to set MAC manually</span></span></span><br><span class="line">hwaddres de:40:63:6f:1f:27</span><br><span class="line">address 192.168.5.6</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 192.168.5.1</span><br><span class="line">dns-nameservers 192.168.5.1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">setting MTU <span class="keyword">for</span> DHCP，static just: mtu 3838</span></span><br><span class="line">pre-up /sbin/ifconfig eth0 mtu 3838</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">保存并退出</span></span><br><span class="line">ctrl+o enter ctrl+x </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">reboot</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">登录路由器（光猫）看看ip是不是改成了自己修改的</span></span><br><span class="line">注意这里填你改的密码</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">静态ip设置成功</span></span><br></pre></td></tr></table></figure><h2 id="五、运行"><a href="#五、运行" class="headerlink" title="五、运行"></a>五、运行</h2><p>打开浏览器，输入刚刚固定的静态ip，即可打开casaos。</p><p><img src="/images/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7%E6%9C%BA.assets/image-20231007002436896.png" alt="image-20231007002436896"></p><p><img src="/images/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7%E6%9C%BA.assets/image-20231007002616142.png" alt="image-20231007002616142"></p><h2 id="感谢以下的作者"><a href="#感谢以下的作者" class="headerlink" title="感谢以下的作者"></a>感谢以下的作者</h2><p>烧录补丁<a href="https://www.right.com.cn/forum/thread-8290977-1-1.html">https://www.right.com.cn/forum/thread-8290977-1-1.html</a></p><p>casaos镜像<a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&tid=8307115&highlight=%E7%8E%A9%E5%AE%A2%E4%BA%91">https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=8307115&amp;highlight=%E7%8E%A9%E5%AE%A2%E4%BA%91</a></p><h1 id="永久挂载u盘并迁移docker"><a href="#永久挂载u盘并迁移docker" class="headerlink" title="永久挂载u盘并迁移docker"></a>永久挂载u盘并迁移docker</h1><p>1.这里首先将u盘插入电脑上，格式化为ntfs格式或者ext4均可</p><p>2.查看插入的U盘</p><blockquote><p> fdisk -l</p></blockquote><p><img src="/images/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7%E6%9C%BA.assets/image-20231004125700165.png" alt="image-20231004125700165"></p><p>3.创建挂载目录</p><blockquote><p>mkdir &#x2F;mnt&#x2F;udisk</p></blockquote><p>4.将U盘挂载到刚才创建的挂载目录下</p><blockquote><p>mount &#x2F;dev&#x2F;sda1 &#x2F;mnt&#x2F;udisk</p></blockquote><p>注意如果报错的话，可能是之前已经挂载上了</p><p>可以输入 umount &#x2F;dev&#x2F;sda1取消挂载再执行命令</p><p>可以使用df -h 查看挂载情况</p><p><img src="/images/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7%E6%9C%BA.assets/image-20231004130626949.png" alt="image-20231004130626949"></p><ol start="5"><li>输入blkid 查看u盘的uuid和类型</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/sda1: LABEL=&quot;U&quot; BLOCK_SIZE=&quot;512&quot; UUID=&quot;964AB5154AB4F35B&quot; TYPE=&quot;ntfs&quot; PARTUUID=&quot;0012459c-01&quot;</span><br></pre></td></tr></table></figure><p>nano &#x2F;etc&#x2F;fstab</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UUID=964AB5154AB4F35B /mnt/udisk ntfs defaults 0 0</span><br></pre></td></tr></table></figure><p><img src="/images/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7%E6%9C%BA.assets/image-20231004133702032.png" alt="image-20231004133702032"></p><p>ctrl+o  再按 enter保存</p><p>ctrl+x 退出</p><p>6.赋予目录修改权限</p><p>chmod -R 777 &#x2F;mnt&#x2F;udisk</p><p>7.重启 检查</p><blockquote><p>reboot -n</p></blockquote><p>df -h 查看挂载情况</p><h2 id="Docker-修改默认存储路径"><a href="#Docker-修改默认存储路径" class="headerlink" title="Docker 修改默认存储路径"></a>Docker 修改默认存储路径</h2><p>1.在刚才挂载的目录下创建docker目录</p><p>mkdir &#x2F;mnt&#x2F;udisk&#x2F;docker</p><ol start="2"><li><p>记录原存储路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker info|grep &quot;Docker Root Dir:&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> Docker Root Dir: /var/lib/docker</span></span><br></pre></td></tr></table></figure></li></ol><p>由于这里运行了casaos 和docker ，所以需先停止运行</p><p>1)确保 CasaOS 服务已停止</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl stop casaos*.service</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl status casaos.service</span></span><br><span class="line">○ casaos.service - CasaOS Service</span><br><span class="line">     Loaded: loaded (/etc/systemd/system/casaos.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: inactive (dead) since Sat 2022-08-13 12:58:08 EDT; 6min ago</span><br><span class="line">    Process: 9812 ExecStart=/usr/bin/casaos -c /etc/casaos.conf (code=killed, signal=TERM)</span><br><span class="line">   Main PID: 9812 (code=killed, signal=TERM)</span><br><span class="line">        CPU: 2.181s</span><br></pre></td></tr></table></figure><p>2)确保 Docker 服务已停止</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl stop docker.*</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl status docker.service</span></span><br><span class="line">○ docker.service - Docker Application Container Engine</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: inactive (dead) since Sat 2022-08-13 13:07:59 EDT; 2s ago</span><br><span class="line">TriggeredBy: ○ docker.socket</span><br><span class="line">       Docs: https://docs.docker.com</span><br><span class="line">    Process: 565 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock (code=exited, status=&gt;</span><br><span class="line">   Main PID: 565 (code=exited, status=0/SUCCESS)</span><br><span class="line">        CPU: 1min 54.225s</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl status docker.socket</span></span><br><span class="line">○ docker.socket - Docker Socket for the API</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/docker.socket; enabled; vendor preset: enabled)</span><br><span class="line">     Active: inactive (dead) since Sat 2022-08-13 13:07:59 EDT; 5s ago</span><br><span class="line">   Triggers: ● docker.service</span><br><span class="line">     Listen: /run/docker.sock (Stream)</span><br><span class="line">        CPU: 1ms</span><br></pre></td></tr></table></figure><p>3.修改docker的systemd的 docker.service的配置文件</p><ol><li>作为 <code>root</code> 用户或在 <code>sudo</code> 权限下，更新 <code>/lib/systemd/system/docker.service</code>，在以 <code>ExecStart=</code> 开头的行中包含 <code>--data-root /path/to/new/location</code> 参数。</li></ol><p>nano &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service</p><p>例如，如果原来的行看起来像这样</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ExecStart</span>=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br></pre></td></tr></table></figure><p>那么更新后应该看起来像这样</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ExecStart</span>=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --data-root /mnt/udisk/docker</span><br></pre></td></tr></table></figure><p><img src="/images/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7%E6%9C%BA.assets/image-20231004145536914.png" alt="image-20231004145536914"></p><ol start="4"><li><p>将现有的内容从 <code>/var/lib/docker</code> 复制到新的路径。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rsync -avxP /var/lib/docker/ /mnt/udisk/docker</span><br><span class="line">sudo rsync -avxP /mnt/udisk/docker /var/lib/docker</span><br></pre></td></tr></table></figure><p>以防出错需要恢复，我们实际上并未移动内容。相反，我们使用 <code>rsync</code> 将内容复制到新的路径。</p></li><li><p>重启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl start docker.service</span><br><span class="line">sudo systemctl start casaos.service</span><br></pre></td></tr></table></figure></li><li><p>如果在几天内一切正常，可以删除 <code>/var/lib/docker/*</code> 以回收一些存储空间。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /var/lib/docker/*</span><br></pre></td></tr></table></figure></li></ol><p>参考链接</p><p><a href="https://wiki.casaos.io/zh/guides/move-docker-images-and-volumes-to-a-diffferent-storage">https://wiki.casaos.io/zh/guides/move-docker-images-and-volumes-to-a-diffferent-storage</a></p><p><a href="https://zhuanlan.zhihu.com/p/653066480?utm_id=0">玩客云刷机Armbian5.9+docker+宝塔面板+可道云，实现低成本家庭私有云 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/hbwxszj/article/details/127260025">玩客云|赚钱宝3代|魔百盒 Armbian Docker 空间不足 增加U盘容量_armbian 挂载u盘_hbwxszj的博客-CSDN博客</a></p><h1 id="安装小雅"><a href="#安装小雅" class="headerlink" title="安装小雅"></a>安装小雅</h1><p>官网地址：<a href="http://alist.xiaoya.pro/">http://alist.xiaoya.pro</a></p><p>安装wiki：<a href="https://xiaoyaliu.notion.site/xiaoya-docker-69404af849504fa5bcf9f2dd5ecaa75f">https://xiaoyaliu.notion.site/xiaoya-docker-69404af849504fa5bcf9f2dd5ecaa75f</a></p><h2 id="获取token"><a href="#获取token" class="headerlink" title="获取token"></a>获取token</h2><p>你需要配置好三个必要参数再安装：</p><table><thead><tr><th align="center"></th><th>对应文件</th><th>获取方式</th></tr></thead><tbody><tr><td align="center">token</td><td>&#x2F;etc&#x2F;xiaoya&#x2F;mytoken.txt</td><td><a href="https://aliyuntoken.vercel.app/">https://aliyuntoken.vercel.app/</a> <a href="https://alist.nn.ci/zh/guide/drivers/aliyundrive.htm"> https://alist.nn.ci/zh/guide/drivers/aliyundrive.htm</a>l</td></tr><tr><td align="center">open token</td><td>&#x2F;etc&#x2F;xiaoya&#x2F;myopentoken.txt</td><td><a href="https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html">https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html</a></td></tr><tr><td align="center">转存目录的folder id</td><td>&#x2F;etc&#x2F;xiaoya&#x2F;temp_transfer_folder_id.txt</td><td>先转存这个 <a href="https://www.aliyundrive.com/s/rP9gP3h9asE">https://www.aliyundrive.com/s/rP9gP3h9asE</a>  到自己网盘（选择资源盘），然后浏览器打开转存后的目录，浏览器的url  <a href="https://www.aliyundrive.com/drive/file/resource/640xxxxxxxxxxxxxxxxxxxca8a">https://www.aliyundrive.com/drive/file/resource/640xxxxxxxxxxxxxxxxxxxca8a</a> 最后一串就是，记得这个目录不要删，里面的内容可以定期删除</td></tr></tbody></table><p>可以新建一个txt来保存</p><h2 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h2><p>ssh 登入 </p><p>然后一键安装</p><blockquote><p><strong>bash -c “$(curl <a href="http://docker.xiaoya.pro/update_new.sh">http://docker.xiaoya.pro/update_new.sh</a>)”</strong></p><p>端口5678</p></blockquote><p>如果是用host模式安装，则用</p><blockquote><p>bash -c “$(curl <a href="http://docker.xiaoya.pro/update_new.sh">http://docker.xiaoya.pro/update_new.sh</a>)” -s host</p><p>端口6789</p></blockquote><h2 id="定时清理缓存"><a href="#定时清理缓存" class="headerlink" title="定时清理缓存"></a>定时清理缓存</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">模式0：每天自动清理一次。如果系统重启需要手动重新运行或把命令加入系统启动。</span><br><span class="line">bash -c &quot;$(curl -s http://adu1991.xicp.net:5200/aliyun_clear.sh | tail -n +2)&quot; -s 0 -tg</span><br><span class="line"></span><br><span class="line">模式1：一次性清理，一般用于测试效果。</span><br><span class="line">bash -c &quot;$(curl -s http://adu1991.xicp.net:5200/aliyun_clear.sh | tail -n +2)&quot; -s 1 -tg</span><br><span class="line"></span><br><span class="line">模式2：已废弃</span><br><span class="line"></span><br><span class="line">模式3：创建一个名为 xiaoyakeeper 的docker定时运行小雅转存清理并升级小雅镜像</span><br><span class="line">bash -c &quot;$(curl -s http://adu1991.xicp.net:5200/aliyun_clear.sh | tail -n +2)&quot; -s 3 -tg</span><br><span class="line"></span><br><span class="line">模式4：同模式3</span><br><span class="line"></span><br><span class="line">模式5：与模式3的区别是实时清理，只要产生了播放缓存一分钟内立即清理。签到和定时升级同模式3</span><br><span class="line">bash -c &quot;$(curl -s http://adu1991.xicp.net:5200/aliyun_clear.sh | tail -n +2)&quot; -s 5 -tg</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.bilibili.com/video/BV1Fu4y1r7zv/?vd_source=1f25c80403148007723bf3c6f54e8642">https://www.bilibili.com/video/BV1Fu4y1r7zv/?vd_source=1f25c80403148007723bf3c6f54e8642</a></p><p><a href="http://alist.xiaoya.pro/">http://alist.xiaoya.pro</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 折腾笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于此博客</title>
      <link href="/posts/594c.html"/>
      <url>/posts/594c.html</url>
      
        <content type="html"><![CDATA[<h2 id="关于此博客"><a href="#关于此博客" class="headerlink" title="关于此博客"></a>关于此博客</h2><p>一直想要搭建一个网站，记录自己的生活，见证自己的成长，中间考虑了不少方案，租建云服务器，搭建实体服务器利用内网穿透实现公网访问，但这些维护起来有些麻烦，自己的需求也没那么高，只需要能够记录一些文章就好，也没有其他的一些需求，于是转向github进行部署，毕竟free很香，趁着空余时间在双十一进行了博客的简单搭建，希望通过此记录一下自己的科研生活还有简单的日常。</p><p>附一张刚抽到的芙芙，望自己养成记录的习惯，不断成长，突破自己。</p><p><img src="/img/fufu.jpg" alt="fufu"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
